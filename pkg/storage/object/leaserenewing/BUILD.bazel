load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "leaserenewing",
    srcs = ["uploader.go"],
    importpath = "bonanza.build/pkg/storage/object/leaserenewing",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/ds",
        "//pkg/storage/object",
        "//pkg/sync",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//semaphore",
    ],
)

go_test(
    name = "leaserenewing_test",
    srcs = [
        "mocks_object_test.go",
        "uploader_test.go",
    ],
    embed = [":leaserenewing"],
    deps = [
        "//pkg/proto/storage/object",
        "//pkg/storage/object",
        "@com_github_buildbarn_bb_storage//pkg/testutil",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//semaphore",
        "@org_uber_go_mock//gomock",
    ],
)

gomock(
    name = "mocks_object",
    out = "mocks_object_test.go",
    interfaces = ["UploaderForTesting"],
    library = "//pkg/storage/object",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "leaserenewing_test",
)
