load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "starlark",
    srcs = [
        "aspect.go",
        "attr.go",
        "build_setting.go",
        "builtins.go",
        "depset.go",
        "dict.go",
        "encode_compiled_program.go",
        "exec_group.go",
        "file.go",
        "label.go",
        "list.go",
        "module_extension.go",
        "named_function.go",
        "named_global.go",
        "package_group.go",
        "parse_repo_dot_bazel.go",
        "path.go",
        "provider.go",
        "reference_equal.go",
        "repo_registrar.go",
        "repository_rule.go",
        "rule.go",
        "select.go",
        "struct.go",
        "subrule.go",
        "tag_class.go",
        "target_reference.go",
        "target_registrar.go",
        "toolchain_type.go",
        "transition.go",
        "visit_labels.go",
    ],
    importpath = "github.com/buildbarn/bonanza/pkg/model/starlark",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/glob",
        "//pkg/label",
        "//pkg/model/core",
        "//pkg/model/core/btree",
        "//pkg/model/core/inlinedtree",
        "//pkg/model/encoding",
        "//pkg/model/parser",
        "//pkg/proto/model/core",
        "//pkg/proto/model/starlark",
        "//pkg/starlark/unpack",
        "//pkg/storage/object",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@net_starlark_go//lib/json",
        "@net_starlark_go//starlark",
        "@net_starlark_go//syntax",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)

go_test(
    name = "starlark_test",
    srcs = [
        "mocks_encoding_test.go",
        "mocks_label_test.go",
        "mocks_starlark_test.go",
        "package_group_test.go",
        "parse_repo_dot_bazel_test.go",
    ],
    embed = [":starlark"],
    deps = [
        "//pkg/label",
        "//pkg/model/core",
        "//pkg/model/core/inlinedtree",
        "//pkg/proto/model/starlark",
        "//pkg/proto/storage/object",
        "//pkg/storage/object",
        "@com_github_buildbarn_bb_storage//pkg/testutil",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)

gomock(
    name = "mocks_encoding",
    out = "mocks_encoding_test.go",
    interfaces = ["BinaryEncoder"],
    library = "//pkg/model/encoding",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "starlark_test",
)

gomock(
    name = "mocks_label",
    out = "mocks_label_test.go",
    interfaces = ["Resolver"],
    library = "//pkg/label",
    mock_names = {"Resolver": "MockLabelResolver"},
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "starlark_test",
)

gomock(
    name = "mocks_starlark",
    out = "mocks_starlark_test.go",
    interfaces = ["CreatedObjectCapturerForTesting"],
    library = ":starlark",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "starlark_test",
)
