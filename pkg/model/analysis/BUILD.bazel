load("@rules_go//go:def.bzl", "go_library")

genrule(
    name = "generate_computer",
    srcs = ["computer.json"],
    outs = ["computer.go"],
    cmd = "$(location //pkg/evaluation/generate_computer) $(location computer.json) > $@",
    tools = ["//pkg/evaluation/generate_computer"],
)

go_library(
    name = "analysis",
    srcs = [
        "action_result.go",
        "base_computer.go",
        "canonical_repo_name.go",
        "command_encoders.go",
        "compatible_execution_platforms.go",
        "compatible_toolchains_for_type.go",
        "compiled_bzl_file.go",
        "computer.go",
        "configured_target.go",
        "directory_creation_parameters.go",
        "directory_readers.go",
        "file_access_parameters.go",
        "file_creation_parameters.go",
        "file_properties_value.go",
        "file_reader.go",
        "files_in_package.go",
        "glob.go",
        "http_archive_contents.go",
        "http_file_contents.go",
        "module_dot_bazel_contents.go",
        "module_extension_repo.go",
        "module_extension_repo_names.go",
        "module_extension_repos.go",
        "module_final_build_list.go",
        "module_registry_urls.go",
        "module_repo_mapping.go",
        "module_rough_build_list.go",
        "modules_with_multiple_versions.go",
        "modules_with_overrides.go",
        "modules_with_remote_overrides.go",
        "package.go",
        "packages_at_and_below.go",
        "registered_execution_platforms.go",
        "registered_repo_platform.go",
        "registered_toolchains.go",
        "registered_toolchains_for_type.go",
        "repo.go",
        "repository_rule_object.go",
        "resolved_toolchains.go",
        "root_module.go",
        "select.go",
        "stable_input_root_path.go",
        "target.go",
        "target_pattern_expansion.go",
        "used_module_extension.go",
        "used_module_extensions.go",
        "user_defined_transition.go",
        "visible_target.go",
    ],
    importpath = "github.com/buildbarn/bonanza/pkg/model/analysis",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/diff",
        "//pkg/ds",
        "//pkg/evaluation",
        "//pkg/glob",
        "//pkg/label",
        "//pkg/model/core",
        "//pkg/model/core/btree",
        "//pkg/model/core/inlinedtree",
        "//pkg/model/encoding",
        "//pkg/model/filesystem",
        "//pkg/model/parser",
        "//pkg/model/starlark",
        "//pkg/proto/model/analysis",
        "//pkg/proto/model/build",
        "//pkg/proto/model/command",
        "//pkg/proto/model/core",
        "//pkg/proto/model/filesystem",
        "//pkg/proto/model/starlark",
        "//pkg/proto/remoteexecution",
        "//pkg/proto/storage/object",
        "//pkg/remoteexecution",
        "//pkg/search",
        "//pkg/starlark",
        "//pkg/starlark/unpack",
        "//pkg/storage/dag",
        "//pkg/storage/object",
        "@com_github_bluekeyes_go_gitdiff//gitdiff",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_kballard_go_shellquote//:go-shellquote",
        "@com_github_ulikunitz_xz//:xz",
        "@net_starlark_go//starlark",
        "@net_starlark_go//syntax",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",  # keep
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_x_sync//errgroup",
        "@org_golang_x_sync//semaphore",
    ],
)
