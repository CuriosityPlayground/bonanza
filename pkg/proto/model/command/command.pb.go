// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/proto/model/command/command.proto

package command

import (
	core "github.com/buildbarn/bonanza/pkg/proto/model/core"
	encoding "github.com/buildbarn/bonanza/pkg/proto/model/encoding"
	filesystem "github.com/buildbarn/bonanza/pkg/proto/model/filesystem"
	object "github.com/buildbarn/bonanza/pkg/proto/storage/object"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Command struct {
	state                       protoimpl.MessageState                  `protogen:"open.v1"`
	Arguments                   []*ArgumentList_Element                 `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
	EnvironmentVariables        []*EnvironmentVariableList_Element      `protobuf:"bytes,2,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	DirectoryCreationParameters *filesystem.DirectoryCreationParameters `protobuf:"bytes,3,opt,name=directory_creation_parameters,json=directoryCreationParameters,proto3" json:"directory_creation_parameters,omitempty"`
	FileCreationParameters      *filesystem.FileCreationParameters      `protobuf:"bytes,4,opt,name=file_creation_parameters,json=fileCreationParameters,proto3" json:"file_creation_parameters,omitempty"`
	OutputPathPattern           *PathPattern                            `protobuf:"bytes,5,opt,name=output_path_pattern,json=outputPathPattern,proto3" json:"output_path_pattern,omitempty"`
	WorkingDirectory            string                                  `protobuf:"bytes,6,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	NeedsStableInputRootPath    bool                                    `protobuf:"varint,7,opt,name=needs_stable_input_root_path,json=needsStableInputRootPath,proto3" json:"needs_stable_input_root_path,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetArguments() []*ArgumentList_Element {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Command) GetEnvironmentVariables() []*EnvironmentVariableList_Element {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *Command) GetDirectoryCreationParameters() *filesystem.DirectoryCreationParameters {
	if x != nil {
		return x.DirectoryCreationParameters
	}
	return nil
}

func (x *Command) GetFileCreationParameters() *filesystem.FileCreationParameters {
	if x != nil {
		return x.FileCreationParameters
	}
	return nil
}

func (x *Command) GetOutputPathPattern() *PathPattern {
	if x != nil {
		return x.OutputPathPattern
	}
	return nil
}

func (x *Command) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *Command) GetNeedsStableInputRootPath() bool {
	if x != nil {
		return x.NeedsStableInputRootPath
	}
	return false
}

type PathPattern struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Children:
	//
	//	*PathPattern_ChildrenExternal
	//	*PathPattern_ChildrenInline
	Children      isPathPattern_Children `protobuf_oneof:"children"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathPattern) Reset() {
	*x = PathPattern{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathPattern) ProtoMessage() {}

func (x *PathPattern) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathPattern.ProtoReflect.Descriptor instead.
func (*PathPattern) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{1}
}

func (x *PathPattern) GetChildren() isPathPattern_Children {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *PathPattern) GetChildrenExternal() *core.Reference {
	if x != nil {
		if x, ok := x.Children.(*PathPattern_ChildrenExternal); ok {
			return x.ChildrenExternal
		}
	}
	return nil
}

func (x *PathPattern) GetChildrenInline() *PathPattern_Children {
	if x != nil {
		if x, ok := x.Children.(*PathPattern_ChildrenInline); ok {
			return x.ChildrenInline
		}
	}
	return nil
}

type isPathPattern_Children interface {
	isPathPattern_Children()
}

type PathPattern_ChildrenExternal struct {
	ChildrenExternal *core.Reference `protobuf:"bytes,1,opt,name=children_external,json=childrenExternal,proto3,oneof"`
}

type PathPattern_ChildrenInline struct {
	ChildrenInline *PathPattern_Children `protobuf:"bytes,2,opt,name=children_inline,json=childrenInline,proto3,oneof"`
}

func (*PathPattern_ChildrenExternal) isPathPattern_Children() {}

func (*PathPattern_ChildrenInline) isPathPattern_Children() {}

type ArgumentList struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Elements      []*ArgumentList_Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArgumentList) Reset() {
	*x = ArgumentList{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArgumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgumentList) ProtoMessage() {}

func (x *ArgumentList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgumentList.ProtoReflect.Descriptor instead.
func (*ArgumentList) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{2}
}

func (x *ArgumentList) GetElements() []*ArgumentList_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type EnvironmentVariableList struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Elements      []*EnvironmentVariableList_Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentVariableList) Reset() {
	*x = EnvironmentVariableList{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentVariableList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariableList) ProtoMessage() {}

func (x *EnvironmentVariableList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariableList.ProtoReflect.Descriptor instead.
func (*EnvironmentVariableList) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{3}
}

func (x *EnvironmentVariableList) GetElements() []*EnvironmentVariableList_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type Outputs struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Stdout        *filesystem.FileContents `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        *filesystem.FileContents `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	OutputRoot    *filesystem.Directory    `protobuf:"bytes,3,opt,name=output_root,json=outputRoot,proto3" json:"output_root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Outputs) Reset() {
	*x = Outputs{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Outputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outputs) ProtoMessage() {}

func (x *Outputs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outputs.ProtoReflect.Descriptor instead.
func (*Outputs) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{4}
}

func (x *Outputs) GetStdout() *filesystem.FileContents {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Outputs) GetStderr() *filesystem.FileContents {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Outputs) GetOutputRoot() *filesystem.Directory {
	if x != nil {
		return x.OutputRoot
	}
	return nil
}

type Action struct {
	state              protoimpl.MessageState    `protogen:"open.v1"`
	Namespace          *object.Namespace         `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CommandEncoders    []*encoding.BinaryEncoder `protobuf:"bytes,2,rep,name=command_encoders,json=commandEncoders,proto3" json:"command_encoders,omitempty"`
	CommandReference   []byte                    `protobuf:"bytes,3,opt,name=command_reference,json=commandReference,proto3" json:"command_reference,omitempty"`
	InputRootReference []byte                    `protobuf:"bytes,4,opt,name=input_root_reference,json=inputRootReference,proto3" json:"input_root_reference,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{5}
}

func (x *Action) GetNamespace() *object.Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *Action) GetCommandEncoders() []*encoding.BinaryEncoder {
	if x != nil {
		return x.CommandEncoders
	}
	return nil
}

func (x *Action) GetCommandReference() []byte {
	if x != nil {
		return x.CommandReference
	}
	return nil
}

func (x *Action) GetInputRootReference() []byte {
	if x != nil {
		return x.InputRootReference
	}
	return nil
}

type Result struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ExitCode          int64                  `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	OutputsReference  []byte                 `protobuf:"bytes,3,opt,name=outputs_reference,json=outputsReference,proto3" json:"outputs_reference,omitempty"`
	AuxiliaryMetadata []*anypb.Any           `protobuf:"bytes,4,rep,name=auxiliary_metadata,json=auxiliaryMetadata,proto3" json:"auxiliary_metadata,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{6}
}

func (x *Result) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Result) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *Result) GetOutputsReference() []byte {
	if x != nil {
		return x.OutputsReference
	}
	return nil
}

func (x *Result) GetAuxiliaryMetadata() []*anypb.Any {
	if x != nil {
		return x.AuxiliaryMetadata
	}
	return nil
}

type PathPattern_Child struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pattern       *PathPattern           `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathPattern_Child) Reset() {
	*x = PathPattern_Child{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathPattern_Child) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathPattern_Child) ProtoMessage() {}

func (x *PathPattern_Child) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathPattern_Child.ProtoReflect.Descriptor instead.
func (*PathPattern_Child) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PathPattern_Child) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PathPattern_Child) GetPattern() *PathPattern {
	if x != nil {
		return x.Pattern
	}
	return nil
}

type PathPattern_Children struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Children      []*PathPattern_Child   `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathPattern_Children) Reset() {
	*x = PathPattern_Children{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathPattern_Children) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathPattern_Children) ProtoMessage() {}

func (x *PathPattern_Children) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathPattern_Children.ProtoReflect.Descriptor instead.
func (*PathPattern_Children) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{1, 1}
}

func (x *PathPattern_Children) GetChildren() []*PathPattern_Child {
	if x != nil {
		return x.Children
	}
	return nil
}

type ArgumentList_Element struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Level:
	//
	//	*ArgumentList_Element_Leaf
	//	*ArgumentList_Element_Parent
	Level         isArgumentList_Element_Level `protobuf_oneof:"level"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArgumentList_Element) Reset() {
	*x = ArgumentList_Element{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArgumentList_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgumentList_Element) ProtoMessage() {}

func (x *ArgumentList_Element) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgumentList_Element.ProtoReflect.Descriptor instead.
func (*ArgumentList_Element) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ArgumentList_Element) GetLevel() isArgumentList_Element_Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *ArgumentList_Element) GetLeaf() string {
	if x != nil {
		if x, ok := x.Level.(*ArgumentList_Element_Leaf); ok {
			return x.Leaf
		}
	}
	return ""
}

func (x *ArgumentList_Element) GetParent() *core.Reference {
	if x != nil {
		if x, ok := x.Level.(*ArgumentList_Element_Parent); ok {
			return x.Parent
		}
	}
	return nil
}

type isArgumentList_Element_Level interface {
	isArgumentList_Element_Level()
}

type ArgumentList_Element_Leaf struct {
	Leaf string `protobuf:"bytes,1,opt,name=leaf,proto3,oneof"`
}

type ArgumentList_Element_Parent struct {
	Parent *core.Reference `protobuf:"bytes,2,opt,name=parent,proto3,oneof"`
}

func (*ArgumentList_Element_Leaf) isArgumentList_Element_Level() {}

func (*ArgumentList_Element_Parent) isArgumentList_Element_Level() {}

type EnvironmentVariableList_Element struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Level:
	//
	//	*EnvironmentVariableList_Element_Leaf_
	//	*EnvironmentVariableList_Element_Parent
	Level         isEnvironmentVariableList_Element_Level `protobuf_oneof:"level"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentVariableList_Element) Reset() {
	*x = EnvironmentVariableList_Element{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentVariableList_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariableList_Element) ProtoMessage() {}

func (x *EnvironmentVariableList_Element) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariableList_Element.ProtoReflect.Descriptor instead.
func (*EnvironmentVariableList_Element) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EnvironmentVariableList_Element) GetLevel() isEnvironmentVariableList_Element_Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *EnvironmentVariableList_Element) GetLeaf() *EnvironmentVariableList_Element_Leaf {
	if x != nil {
		if x, ok := x.Level.(*EnvironmentVariableList_Element_Leaf_); ok {
			return x.Leaf
		}
	}
	return nil
}

func (x *EnvironmentVariableList_Element) GetParent() *core.Reference {
	if x != nil {
		if x, ok := x.Level.(*EnvironmentVariableList_Element_Parent); ok {
			return x.Parent
		}
	}
	return nil
}

type isEnvironmentVariableList_Element_Level interface {
	isEnvironmentVariableList_Element_Level()
}

type EnvironmentVariableList_Element_Leaf_ struct {
	Leaf *EnvironmentVariableList_Element_Leaf `protobuf:"bytes,1,opt,name=leaf,proto3,oneof"`
}

type EnvironmentVariableList_Element_Parent struct {
	Parent *core.Reference `protobuf:"bytes,2,opt,name=parent,proto3,oneof"`
}

func (*EnvironmentVariableList_Element_Leaf_) isEnvironmentVariableList_Element_Level() {}

func (*EnvironmentVariableList_Element_Parent) isEnvironmentVariableList_Element_Level() {}

type EnvironmentVariableList_Element_Leaf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentVariableList_Element_Leaf) Reset() {
	*x = EnvironmentVariableList_Element_Leaf{}
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentVariableList_Element_Leaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariableList_Element_Leaf) ProtoMessage() {}

func (x *EnvironmentVariableList_Element_Leaf) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_model_command_command_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariableList_Element_Leaf.ProtoReflect.Descriptor instead.
func (*EnvironmentVariableList_Element_Leaf) Descriptor() ([]byte, []int) {
	return file_pkg_proto_model_command_command_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *EnvironmentVariableList_Element_Leaf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvironmentVariableList_Element_Leaf) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_pkg_proto_model_command_command_proto protoreflect.FileDescriptor

var file_pkg_proto_model_command_command_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe9, 0x04, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x09,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x6b, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x1d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x6f,
	0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x1b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x6a, 0x0a, 0x18, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x16, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e,
	0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x11, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x1c,
	0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9e, 0x03, 0x0a,
	0x0b, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x7e, 0x0a, 0x11,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x30, 0xea, 0xd7, 0x20, 0x2c, 0x12, 0x2a, 0x62, 0x6f,
	0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x56, 0x0a, 0x0f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x59, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x1a,
	0x50, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xed, 0x01,
	0x0a, 0x0c, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x93, 0x01, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12, 0x69, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x30, 0xea, 0xd7, 0x20, 0x2c, 0x1a, 0x2a,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xfd, 0x02,
	0x0a, 0x17, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x6f,
	0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x8d, 0x02,
	0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x04, 0x6c, 0x65, 0x61,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x65, 0x61, 0x66, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12, 0x74, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x3b, 0xea, 0xd7, 0x20,
	0x37, 0x1a, 0x35, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x1a, 0x30, 0x0a, 0x04, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xcf, 0x01,
	0x0a, 0x07, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x22,
	0xfa, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc3, 0x01, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x12, 0x61, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x11, 0x61, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2f, 0x62, 0x6f, 0x6e, 0x61, 0x6e,
	0x7a, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_pkg_proto_model_command_command_proto_rawDescOnce sync.Once
	file_pkg_proto_model_command_command_proto_rawDescData []byte
)

func file_pkg_proto_model_command_command_proto_rawDescGZIP() []byte {
	file_pkg_proto_model_command_command_proto_rawDescOnce.Do(func() {
		file_pkg_proto_model_command_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_model_command_command_proto_rawDesc), len(file_pkg_proto_model_command_command_proto_rawDesc)))
	})
	return file_pkg_proto_model_command_command_proto_rawDescData
}

var file_pkg_proto_model_command_command_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_proto_model_command_command_proto_goTypes = []any{
	(*Command)(nil),                                // 0: bonanza.model.command.Command
	(*PathPattern)(nil),                            // 1: bonanza.model.command.PathPattern
	(*ArgumentList)(nil),                           // 2: bonanza.model.command.ArgumentList
	(*EnvironmentVariableList)(nil),                // 3: bonanza.model.command.EnvironmentVariableList
	(*Outputs)(nil),                                // 4: bonanza.model.command.Outputs
	(*Action)(nil),                                 // 5: bonanza.model.command.Action
	(*Result)(nil),                                 // 6: bonanza.model.command.Result
	(*PathPattern_Child)(nil),                      // 7: bonanza.model.command.PathPattern.Child
	(*PathPattern_Children)(nil),                   // 8: bonanza.model.command.PathPattern.Children
	(*ArgumentList_Element)(nil),                   // 9: bonanza.model.command.ArgumentList.Element
	(*EnvironmentVariableList_Element)(nil),        // 10: bonanza.model.command.EnvironmentVariableList.Element
	(*EnvironmentVariableList_Element_Leaf)(nil),   // 11: bonanza.model.command.EnvironmentVariableList.Element.Leaf
	(*filesystem.DirectoryCreationParameters)(nil), // 12: bonanza.model.filesystem.DirectoryCreationParameters
	(*filesystem.FileCreationParameters)(nil),      // 13: bonanza.model.filesystem.FileCreationParameters
	(*core.Reference)(nil),                         // 14: bonanza.model.core.Reference
	(*filesystem.FileContents)(nil),                // 15: bonanza.model.filesystem.FileContents
	(*filesystem.Directory)(nil),                   // 16: bonanza.model.filesystem.Directory
	(*object.Namespace)(nil),                       // 17: bonanza.storage.object.Namespace
	(*encoding.BinaryEncoder)(nil),                 // 18: bonanza.model.encoding.BinaryEncoder
	(*status.Status)(nil),                          // 19: google.rpc.Status
	(*anypb.Any)(nil),                              // 20: google.protobuf.Any
}
var file_pkg_proto_model_command_command_proto_depIdxs = []int32{
	9,  // 0: bonanza.model.command.Command.arguments:type_name -> bonanza.model.command.ArgumentList.Element
	10, // 1: bonanza.model.command.Command.environment_variables:type_name -> bonanza.model.command.EnvironmentVariableList.Element
	12, // 2: bonanza.model.command.Command.directory_creation_parameters:type_name -> bonanza.model.filesystem.DirectoryCreationParameters
	13, // 3: bonanza.model.command.Command.file_creation_parameters:type_name -> bonanza.model.filesystem.FileCreationParameters
	1,  // 4: bonanza.model.command.Command.output_path_pattern:type_name -> bonanza.model.command.PathPattern
	14, // 5: bonanza.model.command.PathPattern.children_external:type_name -> bonanza.model.core.Reference
	8,  // 6: bonanza.model.command.PathPattern.children_inline:type_name -> bonanza.model.command.PathPattern.Children
	9,  // 7: bonanza.model.command.ArgumentList.elements:type_name -> bonanza.model.command.ArgumentList.Element
	10, // 8: bonanza.model.command.EnvironmentVariableList.elements:type_name -> bonanza.model.command.EnvironmentVariableList.Element
	15, // 9: bonanza.model.command.Outputs.stdout:type_name -> bonanza.model.filesystem.FileContents
	15, // 10: bonanza.model.command.Outputs.stderr:type_name -> bonanza.model.filesystem.FileContents
	16, // 11: bonanza.model.command.Outputs.output_root:type_name -> bonanza.model.filesystem.Directory
	17, // 12: bonanza.model.command.Action.namespace:type_name -> bonanza.storage.object.Namespace
	18, // 13: bonanza.model.command.Action.command_encoders:type_name -> bonanza.model.encoding.BinaryEncoder
	19, // 14: bonanza.model.command.Result.status:type_name -> google.rpc.Status
	20, // 15: bonanza.model.command.Result.auxiliary_metadata:type_name -> google.protobuf.Any
	1,  // 16: bonanza.model.command.PathPattern.Child.pattern:type_name -> bonanza.model.command.PathPattern
	7,  // 17: bonanza.model.command.PathPattern.Children.children:type_name -> bonanza.model.command.PathPattern.Child
	14, // 18: bonanza.model.command.ArgumentList.Element.parent:type_name -> bonanza.model.core.Reference
	11, // 19: bonanza.model.command.EnvironmentVariableList.Element.leaf:type_name -> bonanza.model.command.EnvironmentVariableList.Element.Leaf
	14, // 20: bonanza.model.command.EnvironmentVariableList.Element.parent:type_name -> bonanza.model.core.Reference
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_proto_model_command_command_proto_init() }
func file_pkg_proto_model_command_command_proto_init() {
	if File_pkg_proto_model_command_command_proto != nil {
		return
	}
	file_pkg_proto_model_command_command_proto_msgTypes[1].OneofWrappers = []any{
		(*PathPattern_ChildrenExternal)(nil),
		(*PathPattern_ChildrenInline)(nil),
	}
	file_pkg_proto_model_command_command_proto_msgTypes[9].OneofWrappers = []any{
		(*ArgumentList_Element_Leaf)(nil),
		(*ArgumentList_Element_Parent)(nil),
	}
	file_pkg_proto_model_command_command_proto_msgTypes[10].OneofWrappers = []any{
		(*EnvironmentVariableList_Element_Leaf_)(nil),
		(*EnvironmentVariableList_Element_Parent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_model_command_command_proto_rawDesc), len(file_pkg_proto_model_command_command_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_model_command_command_proto_goTypes,
		DependencyIndexes: file_pkg_proto_model_command_command_proto_depIdxs,
		MessageInfos:      file_pkg_proto_model_command_command_proto_msgTypes,
	}.Build()
	File_pkg_proto_model_command_command_proto = out.File
	file_pkg_proto_model_command_command_proto_goTypes = nil
	file_pkg_proto_model_command_command_proto_depIdxs = nil
}
