syntax = "proto3";

package bonanza.model.core;

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/buildbarn/bonanza/pkg/proto/model/core";

extend google.protobuf.FieldOptions {
  // If the field is a Reference, this option denotes the format of the
  // data contained in the object that it references.
  ObjectFormat object_format = 66941;
}

message ObjectFormat {
  oneof format {
    // The referenced object stores binary data (e.g., a file chunk).
    google.protobuf.Empty raw = 1;

    // The referenced object stores a Protobuf message. The full name of
    // the message type is provided.
    string message_type_name = 2;

    // The referenced object stores a varint separated list of Protobuf
    // messages. The full name of the message type is provided.
    string message_list_type_name = 3;
  }
}

// Reference to another object contained in the same namespace.
message Reference {
  // One-based index of an outgoing reference of the current object that
  // refers to the child object.
  //
  // Type type fixed32 is used, as this permits altering indices without
  // affecting the encoding of other parts of messages. One-based
  // indexing is used to ensure that the field is always encoded.
  fixed32 index = 1;
}
