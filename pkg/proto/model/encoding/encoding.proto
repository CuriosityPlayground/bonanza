syntax = "proto3";

package bonanza.model.encoding;

import "google/protobuf/empty.proto";

option go_package = "bonanza.build/pkg/proto/model/encoding";

message DeterministicEncryptingBinaryEncoder {
  // 128 or 256-bit key that is used to encrypt the data.
  bytes encryption_key = 1;
}

message BinaryEncoder {
  oneof encoder {
    // Compress data using the "simple LZW" algorithm. This algorithm is
    // identical to regular LZW, except that there is no limit on the
    // maximum number of codes. There is also no mechanism for resetting
    // the dictionary.
    google.protobuf.Empty lzw_compressing = 1;

    // Encrypt data using AES-GCM-SIV, using the following parameters:
    //
    // - Plaintext: input data.
    // - Nonce: Twelve zero bytes.
    // - Additional data: SHA-256 sum of a marshaled BinaryEncoderList
    //   message containing all encoder configurations that are used in
    //   addition to encryption.
    //
    // The 16-byte authentication tag is not stored as part of the
    // ciphertext. Instead, it is stored in the decoding parameters that
    // are used to refer to the data. To reduce information leakage,
    // input is padded using the PADMÃ‰ algorithm.
    DeterministicEncryptingBinaryEncoder deterministic_encrypting = 2;
  }
}

message BinaryEncoderList {
  repeated BinaryEncoder encoders = 1;
}
