syntax = "proto3";

package bonanza.configuration.bonanza_browser;

import "bonanza.build/pkg/proto/configuration/model/parser/parser.proto";
import "bonanza.build/pkg/proto/configuration/storage/object/local/local.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/global/global.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/grpc/grpc.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/http/server/server.proto";

option go_package = "bonanza.build/pkg/proto/configuration/bonanza_browser";

message ApplicationConfiguration {
  // Common configuration options that apply to all Buildbarn binaries.
  buildbarn.configuration.global.Configuration global = 1;

  // Configuration for HTTP servers that expose the web UI.
  repeated buildbarn.configuration.http.server.Configuration http_servers = 2;

  // gRPC client that communicates with the storage frontend.
  buildbarn.configuration.grpc.ClientConfiguration storage_grpc_client = 3;

  // Cache that resides on disk of objects read from storage that have
  // not yet been decoded or parsed. When not set, objects are only
  // cached in memory (see 'parsed_object_pool').
  bonanza.configuration.storage.object.local.StoreConfiguration
      local_object_store = 6;

  // Cache that resides in memory of objects read from storage that have
  // been decoded and parsed.
  bonanza.configuration.model.parser.ParsedObjectPool parsed_object_pool = 4;

  // gRPC client that communicates with the scheduler's build queue
  // state endpoint.
  buildbarn.configuration.grpc.ClientConfiguration
      build_queue_state_grpc_client = 5;
}
