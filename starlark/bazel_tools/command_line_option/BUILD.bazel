load(
    "@bazel_skylib//rules:common_settings.bzl",
    "bool_flag",
    "int_flag",
    "string_flag",
    "string_list_flag",
)
load(":settings.bzl", "label_list_flag")

package(default_visibility = ["//visibility:public"])

bool_flag(
    name = "all feature flag values are present (internal)",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "allow_analysis_failures",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "allow_unresolved_symlinks",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "android_databinding_use_androidx",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "android_databinding_use_v3_4_args",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "android_manifest_merger",
    build_setting_default = "android",
    values = [
        "android",
        "force_android",
        "legacy",
    ],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "android_manifest_merger_order",
    build_setting_default = "alphabetical",
    values = [
        "alphabetical",
        "alphabetical_by_configuration",
        "dependency",
    ],
    visibility = ["//visibility:public"],
)

label_flag(
    name = "apple_crosstool_top",
    build_setting_default = "//tools/cpp:toolchain",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "apple_platform_type",
    # TODO: This should be inferred from the platform somehow.
    build_setting_default = "macos",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "archived_tree_artifact_mnemonics_filter",
    build_setting_default = "-.*",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "break_build_on_parallel_dex2oat_failure",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "build_python_zip",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "build_runfile_links",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "build_runfile_manifests",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

int_flag(
    name = "bytecode_optimization_pass_actions",
    build_setting_default = 1,
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "cc_proto_library_header_suffixes",
    build_setting_default = [".pb.h"],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "cc_proto_library_source_suffixes",
    build_setting_default = [".pb.cc"],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "check_licenses",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "check_visibility",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "compilation_mode",
    build_setting_default = "fastbuild",
    values = [
        "dbg",
        "fastbuild",
        "opt",
    ],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "conlyopt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "copt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

label_flag(
    name = "coverage_output_generator",
    build_setting_default = "//tools/test:lcov_merger",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "cpu",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "crosstool_top",
    build_setting_default = "//tools/cpp:toolchain",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "cs_fdo_profile",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "custom_malloc",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "cxxopt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "desugar_for_android",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "desugar_java8_libs",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "dexopts_supported_in_dexmerger",
    build_setting_default = [
        "--minimal-main-dex",
        "--set-max-idx-number",
    ],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "dexopts_supported_in_dexsharder",
    build_setting_default = ["--minimal-main-dex"],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "dexopts_supported_in_incremental_dexing",
    build_setting_default = [
        "--no-optimize",
        "--no-locals",
    ],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "dynamic_mode",
    build_setting_default = "default",
    values = [
        "default",
        "fully",
        "off",
    ],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "enable_runfiles",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "enforce_constraints",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "enforce_proguard_file_extension",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_add_test_support_to_compile_time_deps",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_allow_android_library_deps_without_srcs",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_allow_runtime_deps_on_neverlink",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_always_filter_duplicate_classes_from_android_test",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_assume_minsdkversion",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_compress_java_resources",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_databinding_v2",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_library_exports_manifest_default",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_resource_cycle_shrinking",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_resource_name_obfuscation",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_resource_path_shortening",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_resource_shrinking",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_rewrite_dexes_with_rex",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_android_use_parallel_dex2oat",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

# TODO: Should be a string_keyed_label_dict_flag().
string_list_flag(
    name = "experimental_bytecode_optimizers",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_cc_implementation_deps",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_check_desugar_deps",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_collect_code_coverage_for_generated_files",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_cpp_compile_resource_estimation",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_cpp_modules",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_debug_selects_always_succeed",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_disable_instrumentation_manifest_merge",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_disallow_legacy_java_toolchain_flags",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_enable_jspecify",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_exclude_defines_from_exec_config",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_exclude_starlark_flags_from_exec_config",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "experimental_exec_config",
    build_setting_default = "@_builtins//:common/builtin_exec_platforms.bzl%bazel_exec_transition",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "experimental_exec_configuration_distinguisher",
    build_setting_default = "off",
    values = [
        "diff_to_affected",
        "full_hash",
        "legacy",
        "off",
    ],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_extended_sanity_checks",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_filter_library_jar_with_program_jar",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_filter_r_jars_from_android_test",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "experimental_fix_deps_tool",
    build_setting_default = "add_dep",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_generate_llvm_lcov",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_get_android_java_resources_from_optimized_jar",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "experimental_import_deps_checking",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_include_xcode_execution_requirements",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "experimental_local_java_optimization_configuration",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_prefer_mutual_xcode",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_proto_descriptor_sets_include_source_info",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "experimental_save_feature_state",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

label_list_flag(
    name = "extra_execution_platforms",
    build_setting_default = [],
)

label_flag(
    name = "fdo_optimize",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "fdo_prefetch_hints",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "fdo_profile",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "fission",
    build_setting_default = "no",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "force_pic",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "grte_top",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "java_language_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "java_launcher",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "java_runtime_version",
    build_setting_default = "local_jdk",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "incompatible_disallow_java_import_empty_jars",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "incompatible_disallow_java_import_exports",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "incompatible_macos_set_install_name",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "incompatible_use_specific_tool_files",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "ios_minimum_os",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "ios_sdk_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "linkopt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "macos_minimum_os",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "macos_sdk_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "memprof_profile",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "minimum_os_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

platform(name = "empty_platform")

label_flag(
    name = "platforms",
    build_setting_default = ":empty_platform",
    singleton_list = True,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "process_headers_in_dependencies",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "proguard_top",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "propeller_optimize",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "proto_compiler",
    build_setting_default = "//tools/proto:protoc",
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "protocopt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

label_flag(
    name = "proto_profile_path",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "python_native_rules_allowlist",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

label_flag(
    name = "python_top",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "stamp",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "strict_proto_deps",
    build_setting_default = "off",
    values = [
        "default",
        "error",
        "off",
        "strict",
        "warn",
    ],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "strict_public_imports",
    build_setting_default = "off",
    values = [
        "default",
        "error",
        "off",
        "strict",
        "warn",
    ],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "strip",
    build_setting_default = "sometimes",
    values = [
        "always",
        "never",
        "sometimes",
    ],
    visibility = ["//visibility:public"],
)

string_list_flag(
    name = "stripopt",
    build_setting_default = [],
    visibility = ["//visibility:public"],
)

string_flag(
    name = "tvos_minimum_os",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "tvos_sdk_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "use_ijars",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "watchos_minimum_os",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

string_flag(
    name = "watchos_sdk_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "xbinary_fdo",
    build_setting_default = None,
    visibility = ["//visibility:public"],
)

string_flag(
    name = "xcode_version",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "xcode_version_config",
    build_setting_default = "//tools/cpp:host_xcodes",
    visibility = ["//visibility:public"],
)
